// =============================================================================
// UPM SCSS Mixins
// =============================================================================

@import 'variables';

// =============================================================================
// Responsive Mixins
// =============================================================================

@mixin mobile-only {
    @media (max-width: #{$breakpoint-sm - 1px}) {
        @content;
    }
}

@mixin tablet-up {
    @media (min-width: #{$breakpoint-sm}) {
        @content;
    }
}

@mixin desktop-up {
    @media (min-width: #{$breakpoint-md}) {
        @content;
    }
}

@mixin large-desktop-up {
    @media (min-width: #{$breakpoint-lg}) {
        @content;
    }
}

@mixin xl-desktop-up {
    @media (min-width: #{$breakpoint-xl}) {
        @content;
    }
}

@mixin breakpoint($size) {
    @if $size =='xs' {
        @media (min-width: #{$breakpoint-xs}) {
            @content;
        }
    }

    @else if $size =='sm' {
        @media (min-width: #{$breakpoint-sm}) {
            @content;
        }
    }

    @else if $size =='md' {
        @media (min-width: #{$breakpoint-md}) {
            @content;
        }
    }

    @else if $size =='lg' {
        @media (min-width: #{$breakpoint-lg}) {
            @content;
        }
    }

    @else if $size =='xl' {
        @media (min-width: #{$breakpoint-xl}) {
            @content;
        }
    }

    @else if $size =='2xl' {
        @media (min-width: #{$breakpoint-2xl}) {
            @content;
        }
    }
}

// =============================================================================
// Typography Mixins
// =============================================================================

@mixin text-xs {
    font-size: $font-size-xs;
    line-height: $line-height-tight;
}

@mixin text-sm {
    font-size: $font-size-sm;
    line-height: $line-height-normal;
}

@mixin text-base {
    font-size: $font-size-base;
    line-height: $line-height-normal;
}

@mixin text-lg {
    font-size: $font-size-lg;
    line-height: $line-height-normal;
}

@mixin text-xl {
    font-size: $font-size-xl;
    line-height: $line-height-normal;
}

@mixin text-2xl {
    font-size: $font-size-2xl;
    line-height: $line-height-tight;
}

@mixin text-3xl {
    font-size: $font-size-3xl;
    line-height: $line-height-tight;
}

@mixin text-4xl {
    font-size: $font-size-4xl;
    line-height: $line-height-tight;
}

@mixin text-5xl {
    font-size: $font-size-5xl;
    line-height: $line-height-tight;
}

@mixin font-weight($weight) {
    font-weight: $weight;
}

@mixin font-family($family) {
    font-family: $family;
}

// =============================================================================
// Layout Mixins
// =============================================================================

@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
}

@mixin flex-column-center {
    @include flex-column;
    align-items: center;
    justify-content: center;
}

@mixin absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin absolute-fill {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

// =============================================================================
// Spacing Mixins
// =============================================================================

@mixin margin($top: null, $right: null, $bottom: null, $left: null) {
    @if $top {
        margin-top: $top;
    }

    @if $right {
        margin-right: $right;
    }

    @if $bottom {
        margin-bottom: $bottom;
    }

    @if $left {
        margin-left: $left;
    }
}

@mixin padding($top: null, $right: null, $bottom: null, $left: null) {
    @if $top {
        padding-top: $top;
    }

    @if $right {
        padding-right: $right;
    }

    @if $bottom {
        padding-bottom: $bottom;
    }

    @if $left {
        padding-left: $left;
    }
}

@mixin spacing($value) {
    margin: $value;
    padding: $value;
}

// =============================================================================
// Visual Mixins
// =============================================================================

@mixin border-radius($radius: $border-radius-base) {
    border-radius: $radius;
}

@mixin box-shadow($shadow: $shadow-base) {
    box-shadow: $shadow;
}

@mixin transition($property: all, $duration: $transition-base, $timing: ease-in-out) {
    transition: $property $duration $timing;
}

@mixin hover-lift {
    @include transition(transform, $transition-fast);

    &:hover {
        transform: translateY(-2px);
    }
}

@mixin focus-ring($color: $primary-500) {
    outline: 2px solid transparent;
    outline-offset: 2px;

    &:focus {
        outline: 2px solid $color;
        outline-offset: 2px;
    }
}

// =============================================================================
// Component Mixins
// =============================================================================

@mixin card {
    background: $white;
    border-radius: $card-border-radius;
    box-shadow: $card-shadow;
    padding: $card-padding;
}

@mixin card-hover {
    @include card;
    @include transition(box-shadow, $transition-fast);

    &:hover {
        box-shadow: $shadow-lg;
    }
}

@mixin button-base {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: none;
    border-radius: $button-border-radius;
    font-family: $font-family-primary;
    font-weight: $font-weight-medium;
    text-decoration: none;
    cursor: pointer;
    @include transition(all, $transition-fast);

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
}

@mixin button-size($padding: $button-padding-base) {
    padding: $padding;
}

@mixin button-variant($bg-color, $text-color: $white, $hover-bg: null) {
    background-color: $bg-color;
    color: $text-color;

    &:hover:not(:disabled) {
        background-color: $hover-bg or lighten($bg-color, 10%);
    }

    &:active:not(:disabled) {
        background-color: lighten($bg-color, 15%);
    }
}

@mixin input-base {
    width: 100%;
    padding: $input-padding;
    border: $input-border-width solid $grey-300;
    border-radius: $input-border-radius;
    font-family: $font-family-primary;
    font-size: $font-size-base;
    @include transition(border-color, $transition-fast);

    &:focus {
        outline: none;
        border-color: $primary-500;
        box-shadow: 0 0 0 3px rgba($primary-500, 0.1);
    }

    &:disabled {
        background-color: $grey-100;
        cursor: not-allowed;
    }
}

// =============================================================================
// Status Mixins
// =============================================================================

@mixin status-color($color) {
    color: $color;

    &::before {
        content: '';
        display: inline-block;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: $color;
        margin-right: $spacing-2;
    }
}

@mixin status-running {
    @include status-color($status-running);
}

@mixin status-stopped {
    @include status-color($status-stopped);
}

@mixin status-paused {
    @include status-color($status-paused);
}

@mixin status-created {
    @include status-color($status-created);
}

@mixin status-exited {
    @include status-color($status-exited);
}

// =============================================================================
// Animation Mixins
// =============================================================================

@mixin fade-in($duration: $transition-base) {
    opacity: 0;
    animation: fadeIn $duration ease-in-out forwards;
}

@mixin slide-in-up($duration: $transition-base) {
    transform: translateY(20px);
    opacity: 0;
    animation: slideInUp $duration ease-out forwards;
}

@mixin slide-in-down($duration: $transition-base) {
    transform: translateY(-20px);
    opacity: 0;
    animation: slideInDown $duration ease-out forwards;
}

@mixin scale-in($duration: $transition-base) {
    transform: scale(0.9);
    opacity: 0;
    animation: scaleIn $duration ease-out forwards;
}

// =============================================================================
// Utility Mixins
// =============================================================================

@mixin sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

@mixin truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin clearfix {
    &::after {
        content: '';
        display: table;
        clear: both;
    }
}

@mixin aspect-ratio($width, $height) {
    position: relative;

    &::before {
        content: '';
        display: block;
        padding-top: percentage($height / $width);
    }

    >* {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

// =============================================================================
// Keyframe Animations
// =============================================================================

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes slideInUp {
    from {
        transform: translateY(20px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInDown {
    from {
        transform: translateY(-20px);
        opacity: 0;
    }

    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes scaleIn {
    from {
        transform: scale(0.9);
        opacity: 0;
    }

    to {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes pulse {

    0%,
    100% {
        opacity: 1;
    }

    50% {
        opacity: 0.5;
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}