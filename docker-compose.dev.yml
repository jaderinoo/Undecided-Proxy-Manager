services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    command: >
      sh -c "
        nginx -g 'daemon off;'
      "
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - upm-dev-network

  backend:
    env_file: .env
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "6081:6081"
    environment:
      - GO_ENV=development
      - BACKEND_PORT=6081
      - DB_PATH=/data/upm-dev.db
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - NGINX_CONFIG_PATH=${NGINX_CONFIG_PATH}
      - NGINX_RELOAD_CMD=${DEV_NGINX_RELOAD_CMD:-${NGINX_RELOAD_CMD}}
      - NGINX_CONTAINER_NAME=${DEV_NGINX_CONTAINER_NAME:-${NGINX_CONTAINER_NAME}}
      - PUBLIC_IP_SERVICE=${PUBLIC_IP_SERVICE:-https://api.ipify.org}
    volumes:
      - ./backend/data:/data
      - ./backend:/app
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - frontend
    networks:
      - upm-dev-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "6071:6071"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - upm-dev-network

networks:
  upm-dev-network:
    driver: bridge
