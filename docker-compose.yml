version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-available:/etc/nginx/sites-available
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
      - nginx_data:/var/lib/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

  backend:
    env_file: .env
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "6080:6080"
    environment:
      - GO_ENV=production
      - BACKEND_PORT=6080
      - DB_PATH=/data/upm.db
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - NGINX_CONFIG_PATH=/etc/nginx/sites-available
      - NGINX_RELOAD_CMD=nginx -s reload
    volumes:
      - sqlite_data:/data
      - ./nginx/sites-available:/etc/nginx/sites-available
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "6070:6070"
    environment:
      - VITE_API_URL=http://localhost:6080
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: alpine:latest
    command: sh -c "mkdir -p /data && touch /data/upm.db && tail -f /dev/null"
    volumes:
      - sqlite_data:/data
    restart: unless-stopped

volumes:
  sqlite_data:
  nginx_data: